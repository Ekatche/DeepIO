version: '3'

services:


###########################
# Setup backend container #
###########################
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - ${BACKEND_PORT}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      - "5678:5678"
    volumes:
      - ./app_memory/uploads:/app/uploads

    depends_on:
      - mongodb
    networks:
      - frontend
      - backend


###########################
# Setup MongoDB container #
###########################
  mongodb:
    image: mongo:latest
    container_name: deepio_mongo
    restart: always
    env_file:
      - .env
    command: mongod --port ${MONGO_PORT} --bind_ip ${MONGO_HOST}
    environment:
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
      MONGO_INITDB_ROOT_USERNAME : ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    expose:
      - ${MONGO_PORT}

    ports:
      - "${MONGO_HOST}:${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ./database/001_create_user.js:/docker-entrypoint-initdb.d/001_create_user.js:ro
      # - ./database/create_user.sh:/docker-entrypoint-initdb.d/create_user.sh:ro
      - ./app_memory/mongo:/data/db
    networks:
      - backend


############################
# Setup frontend container #
############################
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - ${FRONTEND_PORT}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./app_memory/uploads:/app/public/uploads
    networks:
      - frontend

#############################
#    SET UP BRIDGE BETWEEN  #
#############################
networks:
  frontend:
    driver: bridge 
  backend:
    driver: bridge
volumes:
  mongo:
    driver: local
  uploads:
    driver: local